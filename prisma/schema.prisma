generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["multiSchema"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  schemas  = ["auth", "erguen"]
}

model users {
  userid     String       @id @db.Uuid
  email      String
  name       String?
  Events     Events[]
  Wishes     Wishes[]
  users      auth_users   @relation(fields: [userid], references: [id], onDelete: Cascade)
  wishUpvote wishUpvote[]

  @@map("users")
  @@schema("erguen")
}

model Events {
  eventId     String   @id @unique @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  title       String
  description String?
  room        String?
  startDate   DateTime @db.Date
  endDate     DateTime @db.Date
  createdAt   DateTime @default(now()) @db.Timestamptz(6)
  trainerId   String?  @db.Uuid
  Users       users?   @relation(fields: [trainerId], references: [userid])

  @@schema("erguen")
}

model Wishes {
  wishId             String       @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  title              String
  description        String?
  isConvertedToEvent Boolean      @default(false)
  createdAt          DateTime     @default(now()) @db.Timestamptz(6)
  wishCreator        String?      @db.Uuid
  users              users?       @relation(fields: [wishCreator], references: [userid])
  wishUpvote         wishUpvote[]

  @@schema("erguen")
}

model wishUpvote {
  upvoteId   String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  userId     String   @default(dbgenerated("auth.uid()")) @db.Uuid
  wishid     String   @default(dbgenerated("auth.uid()")) @db.Uuid
  created_at DateTime @default(now()) @db.Timestamptz(6)
  users      users    @relation(fields: [userId], references: [userid], onDelete: Cascade)
  Wishes     Wishes   @relation(fields: [wishid], references: [wishId], onDelete: Cascade)

  @@schema("erguen")
}

model auth_users {
  instance_id                 String?           @db.Uuid
  id                          String            @id @db.Uuid
  aud                         String?           @db.VarChar(255)
  role                        String?           @db.VarChar(255)
  email                       String?           @db.VarChar(255)
  encrypted_password          String?           @db.VarChar(255)
  email_confirmed_at          DateTime?         @db.Timestamptz(6)
  invited_at                  DateTime?         @db.Timestamptz(6)
  confirmation_token          String?           @db.VarChar(255)
  confirmation_sent_at        DateTime?         @db.Timestamptz(6)
  recovery_token              String?           @db.VarChar(255)
  recovery_sent_at            DateTime?         @db.Timestamptz(6)
  email_change_token_new      String?           @db.VarChar(255)
  email_change                String?           @db.VarChar(255)
  email_change_sent_at        DateTime?         @db.Timestamptz(6)
  last_sign_in_at             DateTime?         @db.Timestamptz(6)
  raw_app_meta_data           Json?
  raw_user_meta_data          Json?
  is_super_admin              Boolean?
  created_at                  DateTime?         @db.Timestamptz(6)
  updated_at                  DateTime?         @db.Timestamptz(6)
  phone                       String?           @unique
  phone_confirmed_at          DateTime?         @db.Timestamptz(6)
  phone_change                String?           @default("")
  phone_change_token          String?           @default("") @db.VarChar(255)
  phone_change_sent_at        DateTime?         @db.Timestamptz(6)
  confirmed_at                DateTime?         @default(dbgenerated("LEAST(email_confirmed_at, phone_confirmed_at)")) @db.Timestamptz(6)
  email_change_token_current  String?           @default("") @db.VarChar(255)
  email_change_confirm_status Int?              @default(0) @db.SmallInt
  banned_until                DateTime?         @db.Timestamptz(6)
  reauthentication_token      String?           @default("") @db.VarChar(255)
  reauthentication_sent_at    DateTime?         @db.Timestamptz(6)
  is_sso_user                 Boolean           @default(false)
  deleted_at                  DateTime?         @db.Timestamptz(6)
  is_anonymous                Boolean           @default(false)
  users                       users?

  @@index([instance_id])
  @@index([is_anonymous])
  @@map("users")
  @@schema("auth")
}

